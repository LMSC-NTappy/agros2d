PROJECT(${AGROS_GENERATOR})

INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/util)
INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/pythonlab-library)
INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/agros2d-library)
INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/3rdparty)
INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/3rdparty/ctemplate)
IF(WIN32)
    INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/3rdparty/ctemplate/windows)
ELSE(WIN32)
    INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/3rdparty/ctemplate/linux)
ENDIF(WIN32)
INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/3rdparty/paralution/src)
INCLUDE_DIRECTORIES(.)

SET(SOURCES main.cpp 
    generator.cpp 
    generator_module.cpp 
    generator_coupling.cpp)

SET(HEADERS generator.h 
    generator_module.h 
    generator_coupling.h)

IF(MSVC)
  SET(HEADERS ${HEADERS} ../resources_source/classes/module_xml.h ../resources_source/classes/coupling_xml.h)
  SET(SOURCES ${SOURCES} ../resources_source/classes/module_xml.cpp ../resources_source/classes/coupling_xml.cpp)
ENDIF(MSVC)
    
ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES} ${HEADERS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${AGROS_LIBRARY} ${PYTHONLAB_LIBRARY} ${CTEMPLATE_LIBRARY} ${DXFLIB_LIBRARY} ${POLY2TRI_LIBRARY} ${QCUSTOMPLOT_LIBRARY} ${QUAZIP_LIBRARY} ${STB_TRUETYPE_LIBRARY})
INSTALL(TARGETS ${PROJECT_NAME}
				RUNTIME DESTINATION ${CMAKE_HOME_DIRECTORY}
				LIBRARY DESTINATION ${CMAKE_HOME_DIRECTORY}
				ARCHIVE DESTINATION ${CMAKE_HOME_DIRECTORY})

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_HOME_DIRECTORY})
