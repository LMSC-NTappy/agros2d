project(plugins)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

# Debug yes / no.
SET(AGROS_DEBUG NO)
SET(WITH_QT5 NO)

# Allow to override the default values in CMake.vars:
include(../CMake.vars OPTIONAL)

# Add QT.
include(../CMakeQt.cmake)

IF(WITH_QT5)
ELSE(WITH_QT5)
    INCLUDE(${QT_USE_FILE})
ENDIF(WITH_QT5)
ADD_DEFINITIONS(${QT_DEFINITIONS})
ADD_DEFINITIONS(-DQT_PLUGIN)
ADD_DEFINITIONS(-DQT_SHARED)
ADD_DEFINITIONS(-DQT_DLL)

# Set global compiler parameters.
find_package(OpenMP REQUIRED)
IF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  INCLUDE_DIRECTORIES(/usr/include/google)
  IF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  INCLUDE_DIRECTORIES(omp)
  ENDIF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
ENDIF()

IF(MSVC)
  INCLUDE_DIRECTORIES(c:/hpfem/hermes/dependencies/include)
  INCLUDE_DIRECTORIES(d:/hpfem/hermes/dependencies/include)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /openmp /Zc:wchar_t")
  SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /NODEFAULTLIB:libcmtd /NODEFAULTLIB:libcmt")
ENDIF(MSVC)

# Python
FIND_PACKAGE(PythonLibs REQUIRED)

SET(CMAKE_SHARED_LINKING_FLAGS "${CMAKE_SHARED_LINKING_FLAGS} ${PYTHON_LIBRARIES}")
SET(CMAKE_MODULE_LINKING_FLAGS "${CMAKE_MODULE_LINKING_FLAGS} ${PYTHON_LIBRARIES}")
SET(CMAKE_EXE_LINKING_FLAGS "${CMAKE_EXE_LINKING_FLAGS} ${PYTHON_LIBRARIES}")

SET(CMAKE_AGROS_DIRECTORY "${CMAKE_HOME_DIRECTORY}/../")
# Include OUR header files location
include(${CMAKE_AGROS_DIRECTORY}/IncludeSubdirs.cmake)

INCLUDE(${CMAKE_AGROS_DIRECTORY}/hermes/CMake.vars)
SET(CMAKE_MODULE_PATH ${CMAKE_AGROS_DIRECTORY}/hermes/cmake)

# Look for UMFPACK, PARALUTION and BSON
IF(WITH_UMFPACK)
  FIND_PACKAGE(UMFPACK REQUIRED)
  INCLUDE_DIRECTORIES(${UMFPACK_INCLUDE_DIRS})
ENDIF(WITH_UMFPACK)

SET(WITH_PARALUTION YES)
IF(WITH_PARALUTION)
  SET(PARALUTION_LIBRARY agros2d_3dparty_paralution)
  SET(PARALUTION_LIBRARY ${PARALUTION_LIBRARY})
  SET(PARALUTION_INCLUDE_DIR ${CMAKE_HOME_DIRECTORY}/../3rdparty/paralution/src)

  FIND_PACKAGE(PARALUTION REQUIRED)
  INCLUDE_DIRECTORIES(${PARALUTION_INCLUDE_DIR})
ENDIF(WITH_PARALUTION)

IF(WITH_MUMPS)
  FIND_PACKAGE(MUMPS REQUIRED)
  INCLUDE_DIRECTORIES(${PARALUTION_INCLUDE_DIR})
ENDIF(WITH_MUMPS)

# modules

{{#SOURCE}}
ADD_SUBDIRECTORY({{ID}}){{/SOURCE}}

