<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<module:module xmlns:module="XMLModule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="XMLModule ../xsd/module_xml.xsd">

  <module:general deformed_shape="1" id="elasticity" name="Structural analysis">
    <module:description>Structural analysis is the determination of the
			effects of loads on physical structures and their components.
		</module:description>
    <module:analyses>
      <module:analysis id="steadystate" name="Steady state" solutions="2" type="steadystate"/>
    </module:analyses>
  </module:general>

  <module:constants/>

  <module:volume>
    <module:quantity id="elasticity_young_modulus" shortname="st_E"/>
    <module:quantity id="elasticity_poisson_ratio" shortname="st_nu"/>
    <module:quantity id="elasticity_force_x" shortname="st_fx"/>
    <module:quantity id="elasticity_force_y" shortname="st_fy"/>
    <module:quantity id="elasticity_alpha" shortname="st_alpha"/>
    <module:quantity id="elasticity_temperature_difference" shortname="st_dT"/>
    <module:quantity id="elasticity_temperature_reference" shortname="st_Tr"/>
    <module:weakforms_volume>
      <module:weakform_volume analysistype="steadystate">
        <module:quantity id="elasticity_young_modulus"/>
        <module:quantity id="elasticity_poisson_ratio"/>
        <module:quantity id="elasticity_force_x"/>
        <module:quantity id="elasticity_force_y"/>
        <module:quantity id="elasticity_alpha"/>
        <module:quantity id="elasticity_temperature_difference"/>
        <module:quantity id="elasticity_temperature_reference"/>
        <module:matrix_form axi_linear="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * udr * vdr + uval * vdr + udr * vval + uval * vval / (r + 1e-12)) +                                          (st_E / (2.0*(1.0 + st_nu))) * (2 * r * udr * vdr + 2 * uval * vval / (r + 1e-12) + r * udz * vdz)" axi_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * udr * vdr + uval * vdr + udr * vval + uval * vval / (r + 1e-12)) +                                          (st_E / (2.0*(1.0 + st_nu))) * (2 * r * udr * vdr + 2 * uval * vval / (r + 1e-12) + r * udz * vdz)" i="1" j="1" planar_linear="(((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) + 2*(st_E / (2.0*(1.0 + st_nu)))) * (udx * vdx)                                             + (st_E / (2.0*(1.0 + st_nu))) * (udy * vdy)" planar_newton="(((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) + 2*(st_E / (2.0*(1.0 + st_nu)))) * (udx * vdx)                                             + (st_E / (2.0*(1.0 + st_nu))) * (udy * vdy)"/>
        <module:matrix_form axi_linear="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * udz * vdr + udz * vval) + (st_E / (2.0*(1.0 + st_nu))) * r * udr * vdz" axi_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * udz * vdr + udz * vval) + (st_E / (2.0*(1.0 + st_nu))) * r * udr * vdz" i="1" j="2" planar_linear="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (udy * vdx)                                             + (st_E / (2.0*(1.0 + st_nu))) * (udx * vdy)" planar_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (udy * vdx)                        + (st_E / (2.0*(1.0 + st_nu))) * (udx * vdy)"/>
        <module:matrix_form axi_linear="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * udr * vdz + uval * vdz) + (st_E / (2.0*(1.0 + st_nu))) * r * udz * vdr" axi_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * udr * vdz + uval * vdz) + (st_E / (2.0*(1.0 + st_nu))) * r * udz * vdr" i="2" j="1" planar_linear="(st_E / (2.0*(1.0 + st_nu))) * (udy * vdx) + ((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (udx * vdy)" planar_newton="(st_E / (2.0*(1.0 + st_nu))) * (udy * vdx) + ((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (udx * vdy)"/>
        <module:matrix_form axi_linear="r * ((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * udz * vdz +                                          r * (st_E / (2.0*(1.0 + st_nu))) * (udr * vdr + 2 * udz * vdz)" axi_newton="r * ((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * udz * vdz +                                          r * (st_E / (2.0*(1.0 + st_nu))) * (udr * vdr + 2 * udz * vdz)" i="2" j="2" planar_linear="(st_E / (2.0*(1.0 + st_nu))) * (udx * vdx)                                             + (((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) + 2*(st_E / (2.0*(1.0 + st_nu)))) * (udy * vdy)" planar_newton="(st_E / (2.0*(1.0 + st_nu))) * (udx * vdx)                           + (((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) + 2*(st_E / (2.0*(1.0 + st_nu)))) * (udy * vdy)"/>
        <module:vector_form axi_linear="r * st_fx * vval + r * ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * (vdr + vval / r)" axi_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * updr * vdr + upval * vdr + updr * vval + upval * vval / (r + 1e-12)) +                                          (st_E / (2.0*(1.0 + st_nu))) * (2 * r * updr * vdr + 2 * upval * vval / (r + 1e-12) + r * updz * vdz)                                          - r * st_fx * vval - r * ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * (vdr + vval / r)" i="1" j="1" planar_linear="st_fx * vval + ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * vdx" planar_newton="(((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) + 2*(st_E / (2.0*(1.0 + st_nu)))) * (updx * vdx)                                             + (st_E / (2.0*(1.0 + st_nu))) * (updy * vdy)                                             - st_fx * vval - ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * vdx"/>
        <module:vector_form axi_linear="0" axi_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * updz * vdr + updz * vval) +                                             (st_E / (2.0*(1.0 + st_nu))) * r * updr * vdz" i="1" j="2" planar_linear="0" planar_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (updy * vdx)                                             + (st_E / (2.0*(1.0 + st_nu))) * (updx * vdy)"/>
        <module:vector_form axi_linear="0" axi_newton="((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (r * updr * vdz + upval * vdz) +                                            (st_E / (2.0*(1.0 + st_nu))) * r * updz * vdr" i="2" j="1" planar_linear="0" planar_newton="(st_E / (2.0*(1.0 + st_nu))) * (updy * vdx)                                             + ((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * (updx * vdy)"/>
        <module:vector_form axi_linear="r * st_fy * vval + r * ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * vdz" axi_newton="r * ((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) * updz * vdz +                                          r * (st_E / (2.0*(1.0 + st_nu))) * (updr * vdr + 2 * updz * vdz)                                          - r * st_fy * vval - r * ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * vdz" i="2" j="2" planar_linear="st_fy * vval + ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * vdy" planar_newton="(st_E / (2.0*(1.0 + st_nu))) * (updx * vdx)                                             + (((st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu))) + 2*(st_E / (2.0*(1.0 + st_nu)))) * (updy * vdy)                                             - st_fy * vval - ((3*(st_E * st_nu) / ((1.0 + st_nu) * (1.0 - 2.0*st_nu)) + 2*st_E / (2.0*(1.0 + st_nu))) * st_alpha * st_dT) * vdy"/>
      </module:weakform_volume>
    </module:weakforms_volume>
  </module:volume>

  <module:surface>
    <module:quantity id="elasticity_displacement_x" shortname="st_dx"/>
    <module:quantity id="elasticity_displacement_y" shortname="st_dy"/>
    <module:quantity id="elasticity_force_x" shortname="st_fx"/>
    <module:quantity id="elasticity_force_y" shortname="st_fy"/>
    <module:weakforms_surface>
      <module:weakform_surface analysistype="steadystate" default="elasticity_fixed_fixed">
        <module:boundary id="elasticity_fixed_fixed" name="Fixed - fixed">
          <module:quantity id="elasticity_displacement_x"/>
          <module:quantity id="elasticity_displacement_y"/>
          <module:essential_form axi_linear="st_dx" axi_newton="st_dx" i="1" planar_linear="st_dx" planar_newton="st_dx"/>
          <module:essential_form axi_linear="st_dy" axi_newton="st_dy" i="2" planar_linear="st_dy" planar_newton="st_dy"/>
        </module:boundary>
        <module:boundary id="elasticity_fixed_free" name="Fixed - free">
          <module:quantity id="elasticity_displacement_x"/>
          <module:quantity id="elasticity_force_y"/>
          <module:vector_form axi_linear="st_fy * r * vval" axi_newton="- st_fy * r * vval" i="2" j="2" planar_linear="st_fy * vval" planar_newton="- st_fy * vval"/>
          <module:essential_form axi_linear="st_dx" axi_newton="st_dx" i="1" planar_linear="st_dx" planar_newton="st_dx"/>
        </module:boundary>
        <module:boundary id="elasticity_free_fixed" name="Free - fixed">
          <module:quantity id="elasticity_force_x"/>
          <module:quantity id="elasticity_displacement_y"/>
          <module:vector_form axi_linear="st_fx * r * vval" axi_newton="- st_fx * r * vval" i="1" j="1" planar_linear="st_fx * vval" planar_newton="- st_fx * vval"/>
          <module:essential_form axi_linear="st_dy" axi_newton="st_dy" i="2" planar_linear="st_dy" planar_newton="st_dy"/>
        </module:boundary>
        <module:boundary id="elasticity_free_free" name="Free - free">
          <module:quantity id="elasticity_force_x"/>
          <module:quantity id="elasticity_force_y"/>
          <module:vector_form axi_linear="st_fx * r * vval" axi_newton="- st_fx * r * vval" i="1" j="1" planar_linear="st_fx * vval" planar_newton="- st_fx * vval"/>
          <module:vector_form axi_linear="st_fy * r * vval" axi_newton="- st_fy * r * vval" i="2" j="2" planar_linear="st_fy * vval" planar_newton="- st_fy * vval"/>
        </module:boundary>
      </module:weakform_surface>
    </module:weakforms_surface>
  </module:surface>

  <module:preprocessor>
    <module:gui type="volume">
      <module:group>
        <module:quantity id="elasticity_young_modulus" name="Young modulus" shortname="E" shortname_html="&lt;i>E&lt;/i>" shortname_latex="E" unit="Pa" unit_html="Pa" unit_latex="Pa"/>
        <module:quantity id="elasticity_poisson_ratio" name="Poisson ratio" shortname="nu" shortname_html="&lt;i>&amp;nu;&lt;/i>" shortname_latex="\nu" unit="-" unit_html="-" unit_latex="-"/>
        <module:quantity id="elasticity_force_x" name="Force - x" shortname="fx" shortname_html="&lt;i>f&lt;/i>&lt;sub>x&lt;/sub>" shortname_latex="f_{x}" unit="N/m3" unit_html="N.m&lt;sup>-3&lt;/sup>" unit_latex="N \cdot m^{-3}"/>
        <module:quantity id="elasticity_force_y" name="Force - y" shortname="fy" shortname_html="&lt;i>f&lt;/i>&lt;sub>y&lt;/sub>" shortname_latex="f_{y}" unit="N/m3" unit_html="N.m&lt;sup>-3&lt;/sup>" unit_latex="N \cdot m^{-3}"/>
        <module:quantity id="elasticity_alpha" name="Temperature coefficient" shortname="alpha" shortname_html="&lt;i>&amp;alpha;&lt;/i>" shortname_latex="\alpha" unit="1/K" unit_html="K&lt;sup>-1&lt;/sup>" unit_latex="K^{-1}"/>
        <module:quantity id="elasticity_temperature_difference" name="Temperature difference" shortname="dT" shortname_html="D&lt;i>T&lt;/i>" shortname_latex="\triangle T" unit="K" unit_html="K" unit_latex="K"/>
        <module:quantity id="elasticity_temperature_reference" name="Reference emperature" shortname="Tr" shortname_html="&lt;i>T&lt;/i>&lt;sub>ref&lt;/sub>" shortname_latex="T_{ref}" unit="K" unit_html="K" unit_latex="K"/>
      </module:group>
    </module:gui>
    <module:gui type="surface">
      <module:group>
        <module:quantity id="elasticity_displacement_x" name="Fixed - x" shortname="dx" shortname_html="&lt;i>&amp;delta;&lt;/i>&lt;sub>x&lt;/sub>" shortname_latex="\delta_\mathrm{x}" unit="m" unit_html="m" unit_latex="m"/>
        <module:quantity id="elasticity_displacement_y" name="Fixed - y" shortname="dy" shortname_html="&lt;i>&amp;delta;&lt;/i>&lt;sub>y&lt;/sub>" shortname_latex="\delta_\mathrm{y}" unit="m" unit_html="m" unit_latex="m"/>
        <module:quantity id="elasticity_force_x" name="Free - x" shortname="fx" shortname_html="&lt;i>F&lt;/i>&lt;sub>x&lt;/sub>" shortname_latex="F_\mathrm{x}" unit="N/m2" unit_html="N.m&lt;sup>-2&lt;/sup>" unit_latex="N \cdot m^{-2}"/>
        <module:quantity id="elasticity_force_y" name="Free - y" shortname="fy" shortname_html="&lt;i>F&lt;/i>&lt;sub>y&lt;/sub>" shortname_latex="F_\mathrm{y}" unit="N/m2" unit_html="N.m&lt;sup>-2&lt;/sup>" unit_latex="N \cdot m^{-2}"/>
      </module:group>
    </module:gui>
  </module:preprocessor>

  <module:postprocessor>
    <module:localvariables>
      <module:localvariable id="elasticity_displacement" name="Displacement" shortname="d" shortname_html="&lt;i>d&lt;/i>" shortname_latex="d" type="vector" unit="m" unit_html="m" unit_latex="m">
        <module:expression analysistype="steadystate" axi_r="value1" axi_z="value2" planar_x="value1" planar_y="value2"/>
      </module:localvariable>
      <module:localvariable id="elasticity_young_modulus" name="Young modulus" shortname="E" shortname_html="&lt;i>E&lt;/i>" shortname_latex="E" type="scalar" unit="Pa" unit_html="Pa" unit_latex="Pa">
        <module:expression analysistype="steadystate" axi="st_E" planar="st_E"/>
      </module:localvariable>
      <module:localvariable id="elasticity_poisson_ratio" name="Poisson ratio" shortname="nu" shortname_html="&lt;i>&amp;nu;&lt;/i>" shortname_latex="\nu" type="scalar" unit="-" unit_html="-" unit_latex="-">
        <module:expression analysistype="steadystate" axi="st_nu" planar="st_nu"/>
      </module:localvariable>
      <module:localvariable id="elasticity_inner_force" name="Inner force" shortname="f" shortname_html="&lt;i>f&lt;/i>" shortname_latex="f" type="vector" unit="N" unit_html="N" unit_latex="N">
        <module:expression analysistype="steadystate" axi_r="st_fx" axi_z="st_fy" planar_x="st_fx" planar_y="st_fy"/>
      </module:localvariable>
      <module:localvariable id="elasticity_alpha" name="Temperature coefficient" shortname="alpha" shortname_html="&lt;i>&amp;alpha;&lt;/i>" shortname_latex="\alpha" type="scalar" unit="1/K" unit_html="K&lt;sup>-1&lt;/sup>" unit_latex="K^{-1}">
        <module:expression analysistype="steadystate" axi="st_alpha" planar="st_alpha"/>
      </module:localvariable>
      <module:localvariable id="elasticity_temperature_difference" name="Temperature difference" shortname="dT" shortname_html="D&lt;i>T&lt;/i>" shortname_latex="\triangle T" type="scalar" unit="K" unit_html="K" unit_latex="K">
        <module:expression analysistype="steadystate" axi="st_dT" planar="st_dT"/>
      </module:localvariable>
      <module:localvariable id="elasticity_temperature_reference" name="Reference temperature" shortname="Tr" shortname_html="&lt;i>T&lt;/i>&lt;sub>ref&lt;/sub>" shortname_latex="T_{ref}" type="scalar" unit="K" unit_html="K" unit_latex="K">
        <module:expression analysistype="steadystate" axi="st_Tr" planar="st_Tr"/>
      </module:localvariable>
    </module:localvariables>
    <module:view>
      <module:scalar_view>
        <module:default analysistype="steadystate" id="elasticity_displacement"/>
      </module:scalar_view>
      <module:vector_view>
        <module:default analysistype="steadystate" id="elasticity_displacement"/>
      </module:vector_view>
    </module:view>
    <module:volumeintegrals>
      <module:volumeintegral id="elasticity_volume" name="Volume" shortname="V" shortname_html="&lt;i>V&lt;/i>" shortname_latex="V" unit="m3" unit_html="m&lt;sup>3&lt;/sup>" unit_latex="m^{3}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r" planar="1.0"/>
      </module:volumeintegral>
      <module:volumeintegral id="elasticity_cross_section" name="Cross section" shortname="S" shortname_html="&lt;i>S&lt;/i>" shortname_latex="S" unit="m2" unit_html="m&lt;sup>2&lt;/sup>" unit_latex="m^{2}">
        <module:expression analysistype="steadystate" axi="1.0" planar="1.0"/>
      </module:volumeintegral>
    </module:volumeintegrals>
    <module:surfaceintegrals>
      <module:surfaceintegral id="elasticity_length" name="Length" shortname="l" shortname_html="&lt;i>l&lt;/i>" shortname_latex="l" unit="m" unit_html="m" unit_latex="m">
        <module:expression analysistype="steadystate" axi="1.0" planar="1.0"/>
      </module:surfaceintegral>
      <module:surfaceintegral id="elasticity_surface" name="Surface" shortname="S" shortname_html="&lt;i>S&lt;/i>" shortname_latex="S" unit="m2" unit_html="m&lt;sup>2&lt;/sup>" unit_latex="m^{2}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r" planar="1.0"/>
      </module:surfaceintegral>
    </module:surfaceintegrals>
    <module:force/>
  </module:postprocessor>

</module:module>
