<?xml version="1.0"?>
<module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="module.xsd">
    <general id ="elasticity" name="Structural analysis">
        <description>Structural analysis is the determination of the effects of loads on physical structures and their components.</description>
        <properties steadystate="2" harmonic="0" transient="0" />
        <analyses>
            <analysis id="steadystate" type="steadystate" name="Steady state" />
        </analyses>
    </general>

    <constants>
        <constant id="" value="" />
    </constants>

    <macros>
        <macro id="" expression="" />
    </macros>

    <volume>
        <quantity id="elasticity_young_modulus" shortname="E" />
        <quantity id="elasticity_poisson_ratio" shortname="nu" />
        <quantity id="elasticity_force_x" shortname="fx" />
        <quantity id="elasticity_force_y" shortname="fy" />
        <quantity id="elasticity_alpha" shortname="alpha" />
        <quantity id="elasticity_temperature" shortname="T" />
        <quantity id="elasticity_temperature_reference" shortname="Tr" />

        <weakforms>
            <weakform analysistype="steadystate">
                <quantity id="elasticity_young_modulus" />
                <quantity id="elasticity_poisson_ratio" />
                <quantity id="elasticity_force_x" />
                <quantity id="elasticity_force_y" />
                <quantity id="elasticity_alpha" />
                <quantity id="elasticity_temperature" />
                <quantity id="elasticity_temperature_reference" />

                <matrix i="1" j="1" planar="(((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) + 2*(E / (2.0*(1.0 + nu)))) * (udx * vdx)
                                            + (E / (2.0*(1.0 + nu))) * (udy * vdy)"
                                    axi="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (r * udr * vdr + uval * vdr + udr * vval + uval * vval / (r + 1e-12)) +
                                         (E / (2.0*(1.0 + nu))) * (2 * r * udr * vdr + 2 * uval * vval / (r + 1e-12) + r * udz * vdz)" symmetric="1" />
                <matrix i="1" j="2" planar="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (udy * vdx)
                                            + (E / (2.0*(1.0 + nu))) * (udx * vdy)"
                                    axi="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (r * udz * vdr + udz * vval) +
                                            (E / (2.0*(1.0 + nu))) * r * udr * vdz" symmetric="1" />
                <matrix i="2" j="1" planar="(E / (2.0*(1.0 + nu))) * (udy * vdx)
                                            + ((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (udx * vdy)"
                                    axi="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (r * udr * vdz + uval * vdz) +
                                             (E / (2.0*(1.0 + nu))) * r * udz * vdr" symmetric="1" />
                <matrix i="2" j="2" planar="(E / (2.0*(1.0 + nu))) * (udx * vdx)
                                            + (((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) + 2*(E / (2.0*(1.0 + nu)))) * (udy * vdy)"
                                    axi="r * ((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * udz * vdz +
                                         r * (E / (2.0*(1.0 + nu))) * (udr * vdr + 2 * udz * vdz)" symmetric="1" />

                <vector i="1" j="1" planar="(((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) + 2*(E / (2.0*(1.0 + nu)))) * (updx * vdx)
                                            + (E / (2.0*(1.0 + nu))) * (updy * vdy)
                                            - fx * vval  - ((3*(E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu)) + 2*E / (2.0*(1.0 + nu))) * alpha * (T - Tr)) * vdx"
                                    axi="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (r * updr * vdr + upval * vdr + updr * vval + upval * vval / (r + 1e-12)) +
                                         (E / (2.0*(1.0 + nu))) * (2 * r * updr * vdr + 2 * upval * vval / (r + 1e-12) + r * updz * vdz)
                                         - r * fx * vval  - r * ((3*(E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu)) + 2*E / (2.0*(1.0 + nu))) * alpha * (T - Tr)) * (vdr + vval / r)" />
                <vector i="1" j="2" planar="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (updy * vdx)
                                            + (E / (2.0*(1.0 + nu))) * (updx * vdy)"
                                    axi="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (r * updz * vdr + updz * vval) +
                                            (E / (2.0*(1.0 + nu))) * r * updr * vdz" />
                <vector i="2" j="1" planar="(E / (2.0*(1.0 + nu))) * (updy * vdx)
                                            + ((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (updx * vdy)"
                                    axi="((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * (r * updr * vdz + upval * vdz) +
                                           (E / (2.0*(1.0 + nu))) * r * updz * vdr" />
                <vector i="2" j="2" planar="(E / (2.0*(1.0 + nu))) * (updx * vdx)
                                            + (((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) + 2*(E / (2.0*(1.0 + nu)))) * (updy * vdy)
                                            - fy * vval - ((3*(E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu)) + 2*E / (2.0*(1.0 + nu))) * alpha * (T - Tr)) * vdy"
                                    axi="r * ((E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu))) * updz * vdz +
                                         r * (E / (2.0*(1.0 + nu))) * (updr * vdr + 2 * updz * vdz)
                                         - r * fy * vval - r * ((3*(E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu)) + 2*E / (2.0*(1.0 + nu))) * alpha * (T - Tr)) * vdz" />
            </weakform>
        </weakforms>
    </volume>
    	
    <surface>
        <quantity id="elasticity_displacement_x" shortname="dx" />
        <quantity id="elasticity_displacement_y" shortname="dy" />
        <quantity id="elasticity_force_x" shortname="fx" />
        <quantity id="elasticity_force_y" shortname="fy" />

        <weakforms>
            <steadystate default="elasticity_fixed_fixed">
                <boundary id="elasticity_fixed_fixed" name="Fixed - fixed">
                        <item id="elasticity_displacement_x" />
                        <item id="elasticity_displacement_y" />

                        <essential i="1" planar="dx"
                                         axi="dx" />
                        <essential i="2" planar="dy"
                                         axi="dy" />
                </boundary>

                <boundary id="elasticity_fixed_free" name="Fixed - free">
                        <item id="elasticity_displacement_x" />
                        <item id="elasticity_force_y" />

                        <essential i="1" planar="dx"
                                         axi="dx" />
                        <vector i="2" j="2" planar="-fy * vval"
                                            axi="-fy * r * vval" />
                </boundary>

                <boundary id="elasticity_free_fixed" name="Free - fixed">
                        <item id="elasticity_force_x" />
                        <item id="elasticity_displacement_y" />

                        <vector i="1" j="1" planar="-fx * vval"
                                            axi="-fx * r * vval" />
                        <essential i="2" planar="dy"
                                         axi="dy" />
                </boundary>

                <boundary id="elasticity_free_free" name="Free - Free">
                        <item id="elasticity_force_x" />
                        <item id="elasticity_force_y" />

                        <vector i="1" j="1" planar="-fx * vval" axi="-fx * r * vval" />
                        <vector i="2" j="2" planar="-fy * vval" axi="-fy * r * vval" />
                </boundary>
            </steadystate>
        </weakforms>
    </surface>

    <preprocessor>
        <volume>
            <group>
                <quantity id="elasticity_young_modulus" name="Young modulus" shortname="E" unit="Pa" />
                <quantity id="elasticity_poisson_ratio" name="Poisson ratio" shortname="nu" unit="-" />
                <quantity id="elasticity_force_x" name="Force - x" shortname="fx" unit="N/m3" />
                <quantity id="elasticity_force_y" name="Force - y" shortname="fy" unit="N/m3" />
                <quantity id="elasticity_alpha" name="Temperature coefficient" shortname="alpha" unit="1/m" />
                <quantity id="elasticity_temperature" name="Temperature" shortname="T" unit="K" />
                <quantity id="elasticity_temperature_reference" name="Reference emperature" shortname="Tr" unit="K" />
            </group>
        </volume>
        <surface>
            <group>
                <quantity id="elasticity_displacement_x" name="Fixed - x" shortname="dx" unit="m" />
                <quantity id="elasticity_displacement_y" name="Fixed - y" shortname="dy" unit="m" />
                <quantity id="elasticity_force_x" name="Free - x" shortname="fx" unit="N/m2" />
                <quantity id="elasticity_force_y" name="Free - y" shortname="fy" unit="N/m2" />
            </group>
        </surface>
    </preprocessor>

    <localvariable>
        <item id="elasticity_displacement" name="Displacement" shortname="d" unit="m" scalar="0">
            <steadystate planar_comp_x="value1" planar_comp_y="value2" axi_comp_r="value1" axi_comp_z="value2" />
        </item>
        <item id="elasticity_young_modulus" name="Young modulus" shortname="E" unit="Pa" scalar="1">
            <steadystate planar_scalar="E" axi_scalar="E" />
        </item>
        <item id="elasticity_poisson_ratio" name="Poisson ratio" shortname="nu" unit="-" scalar="1">
            <steadystate planar_scalar="nu" axi_scalar="nu" />
        </item>
        <item id="elasticity_inner_force" name="Inner force" shortname="f" unit="N" scalar="0">
            <steadystate planar_comp_x="fx" planar_comp_y="fy" axi_comp_r="fx" axi_comp_z="fy" />
        </item>
        <item id="elasticity_alpha" name="Temperature coefficient" shortname="alpha" unit="1/K" scalar="1">
            <steadystate planar_scalar="alpha" axi_scalar="alpha" />
        </item>
        <item id="elasticity_temperature" name="Temperature" shortname="T" unit="K" scalar="1">
            <steadystate planar_scalar="T" axi_scalar="T" />
        </item>
        <item id="elasticity_temperature_reference" name="Reference temperature" shortname="Tr" unit="K" scalar="1">
            <steadystate planar_scalar="Tr" axi_scalar="Tr" />
        </item>
    </localvariable>

    <view>
        <scalarvariable>
            <steadystate default="elasticity_displacement">
                <item id="elasticity_displacement" />
                <item id="elasticity_young_modulus" />
                <item id="elasticity_poisson_number" />
                <item id="elasticity_inner_force" />
                <item id="elasticity_temperature" />
            </steadystate>
        </scalarvariable>

        <vectorvariable>
            <steadystate default="elasticity_displacement">
                <item id="elasticity_displacement" />
            </steadystate>
        </vectorvariable>
    </view>

    <pointvalue>
        <steadystate>
            <item id="elasticity_displacement" />
            <item id="elasticity_young_modulus" />
            <item id="elasticity_poisson_ratio" />
            <item id="elasticity_inner_force" />
            <item id="elasticity_alpha" />
            <item id="elasticity_temperature" />
            <item id="elasticity_temperature_reference" />
        </steadystate>
    </pointvalue>

    <volumeintegral>
        <item id="volume" name="Volume" shortname="V" unit="m3">
            <steadystate planar="1.0" axi="2.0 * PI * r" />
        </item>
        <item id="surface" name="Cross section" shortname="S" unit="m2">
            <steadystate planar="1.0" axi="1.0" />
        </item>
    </volumeintegral>

    <surfaceintegral>
        <item id="length" name="Length" shortname="l" unit="m">
            <steadystate planar="1.0" axi="1.0" />
        </item>
        <item id="surface" name="Surface" shortname="S" unit="m2">
            <steadystate planar="1.0" axi="2.0 * PI * r" />
        </item>
    </surfaceintegral>
</module>


<!--
termoclen...
            <vector i="1" planar="fx * vval + ((3*(E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu)) + 2*E / (2.0*(1.0 + nu))) * alpha * (T - Tr)) * vdx"
                          axi="fr * r * vval" />
            <vector i="2" planar="fy * vval + ((3*(E * nu) / ((1.0 + nu) * (1.0 - 2.0*nu)) + 2*E / (2.0*(1.0 + nu))) * alpha * (T - Tr)) * vdy"
                          axi="fz * r * vval" />-->
